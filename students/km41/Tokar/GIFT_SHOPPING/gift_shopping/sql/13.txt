
--
-- Create model Bucket
--
CREATE TABLE "GIFTS_BUCKET" ("ID" NUMBER(11) NOT NULL PRIMARY KEY, "NAME" NVARCHAR2(255) NULL, "IS_ORDERED" NUMBER(1) NOT NULL CHECK ("IS_ORDERED" IN (0,1)), "CREATED_TIME" TIMESTAMP NULL, "ORDERED_TIME" TIMESTAMP NULL, "USER_ID" NUMBER(11) NULL);
--
-- Create model GiftItemOrder
--
CREATE TABLE "GIFTS_GIFTITEMORDER" ("ID" NUMBER(11) NOT NULL PRIMARY KEY, "QUANTITY" NUMBER(11) NULL CHECK ("QUANTITY" >= 0), "ADD_TO_BUCKET_TIME" TIMESTAMP NULL, "BUCKET_ID" NUMBER(11) NULL);
--
-- Create model Gifts
--
CREATE TABLE "GIFTS_GIFTS" ("ID" NUMBER(11) NOT NULL PRIMARY KEY, "NAME" NVARCHAR2(20) NULL, "DESCRIPTION" NVARCHAR2(255) NULL, "QUANTITY" NUMBER(11) NULL CHECK ("QUANTITY" >= 0), "PRICE" NUMBER(11) NULL CHECK ("PRICE" >= 0), "PICTURE" NVARCHAR2(100) NULL, "CAREGORY" NVARCHAR2(7) NULL);
--
-- Add field gift to giftitemorder
--
ALTER TABLE "GIFTS_GIFTITEMORDER" ADD "GIFT_ID" NUMBER(11) NULL;
--
-- Alter unique_together for bucket (1 constraint(s))
--
ALTER TABLE "GIFTS_BUCKET" ADD CONSTRAINT "GIFTS_BUC_USER_ID_N_65D72034_U" UNIQUE ("USER_ID", "NAME");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1) INTO i FROM USER_SEQUENCES
        WHERE SEQUENCE_NAME = 'GIFTS_BUCKET_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "GIFTS_BUCKET_SQ"';
    END IF;
END;
/;

CREATE OR REPLACE TRIGGER "GIFTS_BUCKET_TR"
BEFORE INSERT ON "GIFTS_BUCKET"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "GIFTS_BUCKET_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/;
ALTER TABLE "GIFTS_BUCKET" ADD CONSTRAINT "GIFTS_BUC_USER_ID_3958FA0B_F" FOREIGN KEY ("USER_ID") REFERENCES "AUTH_USER" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "GIFTS_BUCKET_USER_ID_3958FA0B" ON "GIFTS_BUCKET" ("USER_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1) INTO i FROM USER_SEQUENCES
        WHERE SEQUENCE_NAME = 'GIFTS_GIFTITEMORDER_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "GIFTS_GIFTITEMORDER_SQ"';
    END IF;
END;
/;

CREATE OR REPLACE TRIGGER "GIFTS_GIFTITEMORDER_TR"
BEFORE INSERT ON "GIFTS_GIFTITEMORDER"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "GIFTS_GIFTITEMORDER_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/;
ALTER TABLE "GIFTS_GIFTITEMORDER" ADD CONSTRAINT "GIFTS_GIF_BUCKET_ID_87960AD0_F" FOREIGN KEY ("BUCKET_ID") REFERENCES "GIFTS_BUCKET" ("ID") DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX "GIFTS_GIFT_BUCKET_ID_87960AD0" ON "GIFTS_GIFTITEMORDER" ("BUCKET_ID");

DECLARE
    i INTEGER;
BEGIN
    SELECT COUNT(1) INTO i FROM USER_SEQUENCES
        WHERE SEQUENCE_NAME = 'GIFTS_GIFTS_SQ';
    IF i = 0 THEN
        EXECUTE IMMEDIATE 'CREATE SEQUENCE "GIFTS_GIFTS_SQ"';
    END IF;
END;
/;

CREATE OR REPLACE TRIGGER "GIFTS_GIFTS_TR"
BEFORE INSERT ON "GIFTS_GIFTS"
FOR EACH ROW
WHEN (new."ID" IS NULL)
    BEGIN
        SELECT "GIFTS_GIFTS_SQ".nextval
        INTO :new."ID" FROM dual;
    END;
/;
CREATE INDEX "GIFTS_GIFT_GIFT_ID_11E0C182" ON "GIFTS_GIFTITEMORDER" ("GIFT_ID");
ALTER TABLE "GIFTS_GIFTITEMORDER" ADD CONSTRAINT "GIFTS_GIF_GIFT_ID_11E0C182_F" FOREIGN KEY ("GIFT_ID") REFERENCES "GIFTS_GIFTS" ("ID") DEFERRABLE INITIALLY DEFERRED;
COMMIT;
